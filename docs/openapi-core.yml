openapi: 3.0.3
info:
  title: Java API Exercise - Core Criteria
  description: |-
  version: 0.2.2

servers:
  - url: http://localhost:4000
tags:
  - name: students
paths:
  /students:
    post:
      tags:
        - students
      summary: Student POST route
      description: Description of an student POST route
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    get:
      tags:
        - students
      summary: Student GET route
      description: Description of an student GET route
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllStudents'
  /students/{id}:
    put:
      tags:
        - students
      summary: Student PUT route
      description: Description of an student PUT route
      parameters:
        - name: id
          in: path
          description: The ID of the student to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      tags:
        - students
      summary: Student DELETE route
      description: Description of an student DELETE route
      parameters:
        - name: id
          in: path
          description: The ID of the student to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

components:
  schemas:
    CreateStudent:
      type: object
      required: [propertyOne, propertyTwo]
      properties:
        propertyOne:
          type: string
          student: "Student Value"
        propertyTwo:
          type: email
          format: email
          student: "student@email.value"
    Student:
      type: object
      properties:
        id:
          type: integer
          student: 1
        propertyOne:
          type: string
          student: "Student Value"
        propertyTwo:
          type: string
          student: "student@email.value"
        createdAt:
          type: string
          format: DateTime
          pattern: YYYY-MM-DDTHH:MM:SS
          student: 2023-03-14T11:01:56.633+00:00
    AllStudents:
      type: array
      items:
        $ref: '#/components/schemas/Student'
